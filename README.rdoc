== README

This is a demo using Rails as the backend and serving an AmpersandJS client.

The intent of this was to figure out the lightest way to integrate NPM packages into the Asset Pipeline, have server precompiled template functions, and instantiate one main view with AmpersandJS.

The following are configured:

* Browserify to utilize NPM packages

* EJS for server precompiled client side templating. (Instead of jade/templatizer, etc.)

Things I learned:

* Don't use asset pipeline require statements (including tree directives) for files that should be used with commonJS style statements. This makes sense from an organization perspective as well.

* Looks like ruby-haml-js could easily be used as an alternative to EJS.

I prefer fewer dependencies and light code, so:

* jQuery has been disabled in the Asset Pipeline (but the gem is still included). It was not needed for the Hello World example.

* The Rails layout (js.html.erb) has been stripped to the bare essentials.

Linux Note:

* If you installed node via apt-get and/or your node install is on your path as nodejs, then browserify-rails chokes. I fixed the issue by a simple symlink pointing node to nodejs on my path.
